name: dbConverterEMZ

on: [push]


permissions:
  contents: write
  discussions: write
  
env:
  DOWNLOAD_REPO: "DexonTechnologyPCL/dbConverter"
      
jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip

      - name: Install Package Python
        run: |
          pip install pyinstaller
          pip install pandas
          pip install numpy
          pip install openpyxl
      
      - name: Install GitHub CLI
        run: |
          choco install gh -y
          
      - name: Compile the Script
        run: |
          pyinstaller --onefile Python_2DB.py

      - name: Delete existing release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          tag_name: v1.0.0  # Use the same tag name as in the Create Release step
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release
        id: create_release
        shell: pwsh
        run: |
          $output = gh release create v1.0.0 --title "Release v1.0.0" --notes "Release notes for version 1.0.0" --repo DexonTechnologyPCL/dbConverter --draft=false --prerelease=false
          if ($output -match "https://github.com/[^/]+/[^/]+/releases/tag/[^/]+") {
            $releaseUrl = $matches[0]
            "release_url=$releaseUrl" >> $env:GITHUB_OUTPUT
          } else {
            Write-Error "Failed to extract release URL from output"
            exit 1
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        shell: pwsh
        run: |
          gh release upload v1.0.0 ./dist/Python_2DB.exe --repo DexonTechnologyPCL/dbConverter --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Download .exe file in release
      - name: Create destination directory
        run: mkdir D:\testload

      - name: Download release asset
        run: |
            gh release download --repo ${{ env.DOWNLOAD_REPO }} --pattern "Python_2DB.exe" --dir "D:\testload"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Verify download
        run: | 
          if (Test-Path "D:\testload\Python_2DB.exe") {
            Write-Output "File successfully downloaded"
          } else {
            Write-Error "File download failed"
            exit 1
          }
          
